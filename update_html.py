# -*- coding: utf-8 -*-

"""
update_html.py

–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–Ω–æ–≤–ª—é—î —É—Å—ñ *.html‚Äë—Ñ–∞–π–ª–∏ —É –∫–∞—Ç–∞–ª–æ–∑—ñ SITE_ROOT:

1. –í—Å—Ç–∞–≤–ª—è—î <script src="/preview.js"></script> –ø–µ—Ä–µ–¥ </body>,
   —É–Ω–∏–∫–∞—é—á–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è.
2. –î–æ–¥–∞—î target="_blank" rel="noopener noreferrer" –¥–æ **–∫–æ–∂–Ω–æ–≥–æ** <a>.
3. –û–Ω–æ–≤–ª—é—î <meta http-equiv="Content‚ÄëSecurity‚ÄëPolicy">
   (–∞–±–æ X‚ÄëContent‚ÄëSecurity‚ÄëPolicy), –¥–æ–¥–∞—é—á–∏ 'self' –¥–æ script‚Äësrc.
   –ó–±–µ—Ä—ñ–≥–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∏–ª—å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞ (`'` –∞–±–æ `&#39;`).
4. –ü—ñ–¥—Ç—Ä–∏–º—É—î —Ä—ñ–∑–Ω—ñ –∫–æ–¥—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤, –∑–∞–ø–∏—Å—É—é—á–∏ —ó—Ö —É UTF‚Äë8.
5. **–ë–µ–∑–ø–µ—á–Ω–∏–π –∑–∞–ø–∏—Å:** —è–∫—â–æ —Ñ–∞–π–ª –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–ª—è –∑–∞–ø–∏—Å—É,
   —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞—î –π–æ–≥–æ —ñ –ø—Ä–æ–¥–æ–≤–∂—É—î —Ä–æ–±–æ—Ç—É.

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    python3 update_html.py
"""

import sys
import re
import html as html_mod               # –¥–ª—è —Ä–æ–∑–∫–æ–¥—É–≤–∞–Ω–Ω—è/–∑–∞–∫–æ–¥—É–≤–∞–Ω–Ω—è HTML‚Äë–µ–Ω—Ç—ñ—Ç–µ–π
from pathlib import Path

# ---------- 3‚Äërd party -------------------------------------------------
try:
    from bs4 import BeautifulSoup, Comment
except ImportError:                     # —ñ–Ω—Ñ–æ—Ä–º—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    sys.exit("–ü–æ–º–∏–ª–∫–∞: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ BeautifulSoup4 ‚Üí pip install beautifulsoup4")

# -------------------------------------------------
# ‚öôÔ∏è  –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (–∑–º—ñ–Ω—ñ—Ç—å –ø—ñ–¥ –≤–∞—à –ø—Ä–æ—î–∫—Ç)
# -------------------------------------------------
SITE_ROOT = Path("/home/oleksandr/Backups/uk/commentaries")   # ‚Üê ‚Üê –∑–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π —à–ª—è—Ö

# -------------------------------------------------
# üì¶  –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ä—ñ–∑–Ω–∏—Ö –∫–æ–¥—É–≤–∞–Ω—å
# -------------------------------------------------
try:
    # Python 3.10+ –ø–æ—Å—Ç–∞—á–∞—î—Ç—å—Å—è –∑ charset_normalizer
    from charset_normalizer import from_bytes as detect_encoding
except ImportError:
    # –Ø–∫—â–æ charset_normalizer –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, —Å–ø—Ä–æ–±—É—î–º–æ chardet
    try:
        import chardet

        def detect_encoding(b):
            """–ü–æ–≤–µ—Ä—Ç–∞—î dict, —Å—Ö–æ–∂–∏–π –Ω–∞ —Ç–µ, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î charset_normalizer."""
            return chardet.detect(b)
    except ImportError:
        detect_encoding = None   # –±–µ–∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ ‚Äì –±—É–¥–µ–º–æ —á–∏—Ç–∞—Ç–∏ –∑ errors='replace'


def read_file_smart(path: Path) -> str:
    """–ß–∏—Ç–∞—î —Ñ–∞–π–ª, –Ω–∞–º–∞–≥–∞—é—á–∏—Å—å –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –π–æ–≥–æ –∫–æ–¥—É–≤–∞–Ω–Ω—è."""
    raw = path.read_bytes()

    # 1Ô∏è‚É£ –°–ø—Ä–æ–±–∞ UTF‚Äë8
    try:
        return raw.decode('utf-8')
    except UnicodeDecodeError:
        pass

    # 2Ô∏è‚É£ –°–ø—Ä–æ–±–∞ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–æ–¥—É–≤–∞–Ω–Ω—è (charset‚Äënormalizer / chardet)
    if detect_encoding:
        result = detect_encoding(raw)
        enc = result.get('encoding')
        conf = result.get('confidence', 0)
        if enc and conf > 0.5:
            try:
                return raw.decode(enc)
            except Exception:
                pass

    # 3Ô∏è‚É£ –§–æ–ª–±–µ–∫ ‚Äì –∑–∞–º—ñ–Ω—é—î–º–æ –Ω–µ–≤—ñ—Ä–Ω—ñ –±–∞–π—Ç–∏
    return raw.decode('utf-8', errors='replace')


def write_file_utf8(path: Path, text: str):
    """
    –ó–∞–ø–∏—Å—É—î —Ä—è–¥–æ–∫ —É —Ñ–∞–π–ª —É –∫–æ–¥—É–≤–∞–Ω–Ω—ñ UTF‚Äë8.
    –Ø–∫—â–æ –∑–∞–ø–∏—Å –Ω–µ–º–æ–∂–ª–∏–≤–∏–π (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–µ–º–∞—î –ø—Ä–∞–≤), –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è
    —ñ –ø—Ä–æ–¥–æ–≤–∂—É—î —Ä–æ–±–æ—Ç—É.
    """
    try:
        path.write_text(text, encoding='utf-8')
    except PermissionError as e:
        print(f"[‚ö†Ô∏è] –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø–∏—Å–∞—Ç–∏ {path.relative_to(SITE_ROOT)}: {e}")
    except OSError as e:
        # –Ü–Ω—à—ñ –º–æ–∂–ª–∏–≤—ñ –ø–æ–º–∏–ª–∫–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ñ–∞–π–ª –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ)
        print(f"[‚ö†Ô∏è] –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É {path.relative_to(SITE_ROOT)}: {e}")


# -------------------------------------------------
# üõ†Ô∏è  –û–ø–µ—Ä–∞—Ü—ñ—ó –Ω–∞–¥ HTML (BeautifulSoup)
# -------------------------------------------------
SCRIPT_TAG = '<script src="/preview.js"></script>'


def ensure_script(soup: BeautifulSoup) -> bool:
    """–î–æ–¥–∞—î <script src="/preview.js"></script> –ø–µ—Ä–µ–¥ </body>, —è–∫—â–æ —â–µ –Ω–µ–º–∞—î."""
    if soup.find('script', src=re.compile(r'^/preview\.js$', re.IGNORECASE)):
        return False                     # –≤–∂–µ —î

    new_tag = soup.new_tag('script', src="/preview.js")
    if soup.body:
        soup.body.append(new_tag)
    else:
        soup.append(new_tag)
    return True


def add_target_blank(soup: BeautifulSoup) -> bool:
    """–î–æ–¥–∞—î target="_blank" rel="noopener noreferrer" –¥–æ –≤—Å—ñ—Ö <a> –±–µ–∑ target."""
    changed = False
    for a in soup.find_all('a'):
        if a.has_attr('target'):
            continue
        a['target'] = '_blank'
        a['rel'] = 'noopener noreferrer'
        changed = True
    return changed


def adjust_body(soup: BeautifulSoup) -> bool:
    """–í—Å—Ç–∞–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç—É + –∞—Ç—Ä–∏–±—É—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω—å."""
    return ensure_script(soup) or add_target_blank(soup)


def adjust_csp_meta(soup: BeautifulSoup) -> bool:
    """
    –û–Ω–æ–≤–ª—é—î <meta http-equiv="Content‚ÄëSecurity‚ÄëPolicy">
    (–∞–±–æ X‚ÄëContent‚ÄëSecurity‚ÄëPolicy), –¥–æ–¥–∞—é—á–∏ 'self' –¥–æ script-src.
    –ó–±–µ—Ä—ñ–≥–∞—î —Å—Ç–∏–ª—å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞ (`'` –∞–±–æ `&#39;`).
    """
    meta = soup.find('meta',
                     attrs={'http-equiv': re.compile(
                         r'^(Content-Security-Policy|X-Content-Security-Policy)$',
                         re.IGNORECASE)})

    if not meta or not meta.has_attr('content'):
        return False

    raw_content = meta['content']               # –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ &#39;
    decoded = html_mod.unescape(raw_content)    # —Ä–æ–∑–∫–æ–¥—É—î–º–æ

    directives = [d.strip() for d in decoded.split(';') if d.strip()]

    new_directives = []
    script_src_found = False
    for d in directives:
        if d.lower().startswith('script-src'):
            parts = d.split()
            sources = parts[1:]
            if not any(src.strip("'\"") == 'self' for src in sources):
                sources.append("'self'")
            new_directives.append('script-src ' + ' '.join(sources))
            script_src_found = True
        else:
            new_directives.append(d)

    if not script_src_found:
        new_directives.append("script-src 'self'")

    new_content = '; '.join(new_directives)

    # –Ø–∫—â–æ –≤ –æ—Ä–∏–≥—ñ–Ω–∞–ª—ñ –±—É–≤ &#39;, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ –Ω–∞–∑–∞–¥
    if '&#39;' in raw_content:
        new_content = new_content.replace("'", "&#39;")

    if new_content == raw_content:
        return False

    meta['content'] = new_content
    return True


def process_file(path: Path) -> None:
    """–ß–∏—Ç–∞—î, –º–æ–¥–∏—Ñ—ñ–∫—É—î —Ç–∞ –∑–∞–ø–∏—Å—É—î —Ñ–∞–π–ª (—É UTF‚Äë8)."""
    original_html = read_file_smart(path)

    soup = BeautifulSoup(original_html, 'html.parser')

    # –í–∏–¥–∞–ª—è—î–º–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ ‚Äì —Ü–µ –Ω–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ, –ø—Ä–æ—Å—Ç–æ —á–∏—Å—Ç—ñ—à–µ
    for comment in soup.find_all(string=lambda text: isinstance(text, Comment)):
        comment.extract()

    body_changed = adjust_body(soup)
    csp_changed  = adjust_csp_meta(soup)

    if body_changed or csp_changed:
        # prettify —Ñ–æ—Ä–º–∞—Ç—É—î HTML, –∞ formatter="html" –∑–±–µ—Ä—ñ–≥–∞—î —Å—É—Ç—Ç—î–≤—ñ —Å–∏–º–≤–æ–ª–∏
        write_file_utf8(path, soup.prettify(formatter="html"))
        print(f"‚úì –û–Ω–æ–≤–ª–µ–Ω–æ {path.relative_to(SITE_ROOT)}")
    else:
        print(f"= {path.relative_to(SITE_ROOT)} ‚Äì –±–µ–∑ –∑–º—ñ–Ω")


# -------------------------------------------------
# üöÄ  –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö *.html —É SITE_ROOT
# -------------------------------------------------
def walk_and_update():
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î –≤—Å—ñ *.html‚Äë—Ñ–∞–π–ª–∏ —É –∫–∞—Ç–∞–ª–æ–∑—ñ SITE_ROOT
    (–≤–∫–ª—é—á–∞—é—á–∏ –ø—ñ–¥–∫–∞—Ç–∞–ª–æ–≥–∏) —ñ –≤–∏–∫–ª–∏–∫–∞—î process_file().
    """
    for html_path in SITE_ROOT.rglob('*.html'):   # —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ!
        process_file(html_path)


# -------------------------------------------------
# üèÅ  –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
# -------------------------------------------------
def main():
    if not SITE_ROOT.is_dir():
        sys.exit(f"[!] –ö–∞—Ç–∞–ª–æ–≥ {SITE_ROOT} –Ω–µ —ñ—Å–Ω—É—î.")

    walk_and_update()
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à —Å–∞–π—Ç.\n"
          "   ‚Ä¢ –ü—Ä–∏ —É–≤—ñ–º–∫–Ω–µ–Ω–æ–º—É JavaScript –ø—Ä–∞—Ü—é—î –ø—Ä–µ–≤‚Äô—é.\n"
          "   ‚Ä¢ –ü—Ä–∏ –≤–∏–º–∫–Ω–µ–Ω–æ–º—É JavaScript –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏–≤–∞—é—Ç—å—Å—è —É –Ω–æ–≤—ñ–π –≤–∫–ª–∞–¥—Ü—ñ.\n"
          "   ‚Ä¢ CSP‚Äëmeta‚Äë—Ç–µ–≥ —Ç–µ–ø–µ—Ä –º—ñ—Å—Ç–∏—Ç—å \"script-src 'self'\" (—É —Ç–æ–º—É –∂ —Ñ–æ—Ä–º–∞—Ç—ñ, —â–æ –π —Ä–∞–Ω—ñ—à–µ).\n")


if __name__ == '__main__':
    main()
